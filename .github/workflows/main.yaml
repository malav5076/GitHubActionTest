name: Build and Release Workflow

on:
  push:
    branches:
      - main

jobs:
  setup_java:
    name: Set up Java and Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
    
       

  build_info_extractor:
    name: Extract Package Names
    runs-on: ubuntu-latest


    outputs:
      packageNames: ${{ steps.extract_packageNames.outputs.packageNames }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Print full current directory path
        run: pwd

      - name: Extract and print current directory name
        run: |
          current_dir_name=$(basename "$PWD")
          echo "Current directory name is: $current_dir_name"
      - name: List the files and directories
        run: |
           ls -R

      - name: Extract Package Names
        id: extract_packageNames
        run: |
          flavorsJson=$(cat flavors.json)
          packageNames=$(echo "$flavorsJson" | jq '.flavors[].packageName')
              
      - name: print the packageNames
        run: |
         echo "Extracted Package Names: ${{ steps.extract_packageNames.outputs.packageNames}}"     


  sign_and_release:
    name: Sign and Release Bundles
    runs-on: ubuntu-latest

    needs: [setup_java, build_info_extractor]
    
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2
  

      - name: Print full current directory path
        run: pwd

      - name: Extract and print current directory name
        run: |
          current_dir_name=$(basename "$PWD")
          echo "Current directory name is: $current_dir_name"
      - name: List the files and directories
        run: |
           ls -R

      - name: print the output of packageName
        run: | 
             echo "Extracted Package Names: ${{ needs.build_info_extractor.outputs.packageNames}}"     

      - name: Sign AAB
        id: sign        
        uses: r0adkll/sign-android-release@v1         
        with:
            releaseDirectory: ${{needs.build_info_extractor.outputs.packageNames.packageName[0]}}
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}      
            alias: ${{ secrets.ALIAS }}   
            keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}


      - name: Release
        id: release       
        uses: r0adkll/upload-google-play@v1         
        with:
                serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
                packageName: com.medpresso.Lonestar.${{needs.build_info_extractor.outputs.packageNames[0]}}
                releaseFiles: ${{needs.build_info_extractor.outputs.packageNames[0]}}Release/app-${{needs.build_info_extractor.outputs.packageNames[0]}}-release.aab
                track: internal     
          
      


