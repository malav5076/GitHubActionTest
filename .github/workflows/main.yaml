name: Build and Release Workflow

on:
  push:
    branches:
      - build_automation_test

jobs:
  setup_java:
    name: Set up Java and Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
    
       

  json_file_reader:
    name: Reads json file
    runs-on: ubuntu-latest


    outputs:
      matrix: ${{ steps.read_flavor_json_file.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Print full current directory path
        run: pwd

      - name: Extract and print current directory name
        run: |
          current_dir_name=$(basename "$PWD")
          echo "Current directory name is: $current_dir_name"
      - name: List the files and directories
        run: |
           ls -R

      - name: Read flavor JSON File
        id: read_flavor_json_file
        run: |
              matrix=$(jq -c . flavors.json)
              echo "matrix=$matrix" >> $GITHUB_OUTPUT
              
          
    
  build_with_gradle:
    name: Build with Gradle
    runs-on: ubuntu-latest

    steps:
     
      - name: Gradle version
        run:  ./gradlew -v 

      - name: generateFlavorsJson   
        run: |
            ./gradlew generateFlavorsJson 
   
  sign_and_release:
    name: Sign and Release Bundles
    runs-on: ubuntu-latest

    needs: [setup_java, json_file_reader]

    strategy:
      matrix: ${{fromJson(needs.json_file_reader.outputs.matrix)}} 
    
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2

      - name: generate_bundle
        run: | 
             variantName=${{matrix.variantName}}
             echo "Generating Release bundle for $variantName"
             capitalized_variantName="$(echo "${name:0:1}" | tr '[:lower:]' '[:upper:]')${name:1}"
             ./gradlew build${capitalized_variantName}Release  
             echo "Release bundle generated for the build $variantName" 
        
      - name: Sign AAB
        id: sign        
        uses: r0adkll/sign-android-release@v1         
        with:
            releaseDirectory: app/build/outputs/bundle/${{matrix.variantName}}Release
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}      
            alias: ${{ secrets.ALIAS }}   
            keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}


      - name: Release
        id: release       
        uses: r0adkll/upload-google-play@v1         
        with:
                serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
                packageName: ${{matrix.packageName}}
                releaseFiles: app/build/outputs/bundle/${{matrix.variantName}}Release/app-${{matrix.variantName}}-release.aab
                track: ${{matrix.track}}     
          
      


